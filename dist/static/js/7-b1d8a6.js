webpackJsonp([7],{378:function(n,s,l){"use strict";function e(n){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function a(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function i(n,s){for(var l=0;l<s.length;l++){var e=s[l];e.enumerable=e.enumerable||!1,e.configurable=!0,"value"in e&&(e.writable=!0),Object.defineProperty(n,e.key,e)}}function t(n,s,l){return s&&i(n.prototype,s),l&&i(n,l),n}function p(n,s){return!s||"object"!==e(s)&&"function"!=typeof s?o(n):s}function o(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function r(n){return(r=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function c(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&u(n,s)}function u(n,s){return(u=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}Object.defineProperty(s,"__esModule",{value:!0});var h=l(6),d=l.n(h),f=function(n){function s(n){return a(this,s),p(this,r(s).call(this,n))}return c(s,n),t(s,[{key:"rawMarkup",value:function(){return{__html:'<h1 id="some-operations-on-linux">Some Operations on Linux</h1>\n<h3 id="scp-secure-copy-">scp（secure copy）跨机远程拷贝</h3>\n<p>scp 用于在 Linux 下进行远程拷贝文件的命令，和它类似的命令有 cp，不过 cp 只是在本机进行拷贝不能跨服务器，而且 scp 传输是加密的。</p>\n<h4 id="-">命令格式</h4>\n<p>一、scp [参数][原路径] [目标路径]</p>\n<ul>\n<li>-1 强制 scp 命令使用协议 ssh1</li>\n<li>-2 强制 scp 命令使用协议 ssh2</li>\n<li>-4 强制 scp 命令只使用 IPv4 寻址</li>\n<li>-6 强制 scp 命令只使用 IPv6 寻址</li>\n<li>-B 使用批处理模式（传输过程中不询问传输口令或短语）</li>\n<li>-C 允许压缩。（将-C 标志传递给 ssh，从而打开压缩功能）</li>\n<li>-p 留原文件的修改时间，访问时间和访问权限。</li>\n<li>-q 不显示传输进度条。</li>\n<li>-r 递归复制整个目录。</li>\n<li>-v 详细方式显示输出。scp 和 ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题。</li>\n<li>-c cipher 以 cipher 将数据传输进行加密，这个选项将直接传递给 ssh。</li>\n<li>-F ssh_config 指定一个替代的 ssh 配置文件，此参数直接传递给 ssh。</li>\n<li>-i identity_file 从指定文件中读取传输时使用的密钥文件，此参数直接传递给 ssh。</li>\n<li>-l limit 限定用户所能使用的带宽，以 Kbit/s 为单位。</li>\n<li>-o ssh_option 如果习惯于使用 ssh_config(5)中的参数传递方式，</li>\n<li>-P port 注意是大写的 P, port 是指定数据传输用到的端口号</li>\n<li>-S program 指定加密传输时所使用的程序。此程序必须能够理解 ssh(1)的选项。</li>\n</ul>\n<h4 id="-">命令参数</h4>\n<h4 id="-">例子</h4>\n<p>复制文件</p>\n<pre><code className="lang-shell">scp local_file remote_username<span class="hljs-meta">@remote</span><span class="hljs-string">_ip:</span>remote_folder\nscp local_file remote_username<span class="hljs-meta">@remote</span><span class="hljs-string">_ip:</span>remote_file\nscp local_file <span class="hljs-string">remote_ip:</span>remote_folder\nscp local_file <span class="hljs-string">remote_ip:</span>remote_file\n</code></pre>\n<p>###二、 ufw 防火墙配置</p>\n<p>Ubuntu 附带一个名为 UFW（简单防火墙）的防火墙配置工具。UFW 是管理 iptables 防火墙规则的一个用户友好的前端，它的主要目标是使管理 iptables 更容易，或者如其名所说，简单。\n默认情况下，UFW 将阻止所有传入连接并允许所有出站连接。 这意味着任何试图访问您的服务器的用户都将无法连接，除非您专门打开该端口，而服务器上运行的所有应用程序和服务都将能够访问外部世界。</p>\n<h4 id="-">操作</h4>\n<ol>\n<li>查看 ufw 状态</li>\n</ol>\n<pre><code class="lang-shell">sudo ufw <span class="hljs-built_in">status</span> <span class="hljs-built_in">verbose</span>\n</code></pre>\n<ol start="2">\n<li>允许 SSH 连接</li>\n</ol>\n<pre><code class="lang-shell"><span class="hljs-attribute">sudo ufw allow ssh</span>\n</code></pre>\n<ol start="3">\n<li>允许端口连接</li>\n</ol>\n<pre><code class="lang-shell">sudo ufw allow  <span class="hljs-number">80</span>/tcp\n</code></pre>\n<ol start="4">\n<li>允许特定的 IP 地址</li>\n</ol>\n<pre><code class="lang-shell"><span class="hljs-selector-tag">sudo</span> <span class="hljs-selector-tag">ufw</span> <span class="hljs-selector-tag">allow</span> <span class="hljs-selector-tag">from</span> 55<span class="hljs-selector-class">.56</span><span class="hljs-selector-class">.57</span><span class="hljs-selector-class">.58</span>\n</code></pre>\n<ol start="5">\n<li>拒绝连接</li>\n</ol>\n<pre><code class="lang-shell">  sudo ufw deny from <span class="hljs-number">33.34</span><span class="hljs-number">.35</span><span class="hljs-number">.0</span>/<span class="hljs-number">34</span>\n</code></pre>\n<ol start="6">\n<li>删除规则</li>\n</ol>\n<pre><code class="lang-shell"><span class="hljs-attribute">  sudo ufw status somenumbered</span>\n</code></pre>\n<p>附： 在 window 查看远程端口是否开放</p>\n<pre><code class="lang-shell"><span class="hljs-attribute">telnet HOST PORT</span>\n</code></pre>\n<p>###三、按装 tar.gz 源码包</p>\n<pre><code class="lang-shell">wget http<span class="hljs-variable">s:</span>//www.xxx.<span class="hljs-keyword">com</span>/download/somepackge.tar.gz\ntar -zxvf somepackge.tar.gz\n<span class="hljs-keyword">cd</span> somepackge\n./config\n<span class="hljs-keyword">make</span>\n<span class="hljs-keyword">make</span> install\n</code></pre>\n<h3 id="-ps-process-status-">四、ps（Process Status） 进程查看器</h3>\n<p>ps 命令用来列出系统中当前运行的那些进程。ps 命令列出的是当前那些进程的快照，就是执行 ps 命令的那个时刻的那些进程。</p>\n<p>linux 上进程有 5 种状态:</p>\n<ol>\n<li>运行(正在运行或在运行队列中等待)</li>\n<li>中断(休眠中, 受阻, 在等待某个条件的形成或接受到信号)</li>\n<li>不可中断(收到信号不唤醒和不可运行, 进程必须等待直到有中断发生)</li>\n<li>僵死(进程已终止, 但进程描述符存在, 直到父进程调用 wait4()系统调用后释放)</li>\n<li>停止(进程收到 SIGSTOP, SIGTSTP, SIGTTIN, SIGTTOU 信号后停止运行运行)</li>\n</ol>\n<h4 id="-">命令参数</h4>\n<ul>\n<li>a 显示所有进程</li>\n<li>-a 显示同一终端下的所有程序</li>\n<li>-A 显示所有进程</li>\n<li>c 显示进程的真实名称</li>\n<li>-N 反向选择</li>\n<li>-e 等于“-A”</li>\n<li>e 显示环境变量</li>\n<li>f 显示程序间的关系</li>\n<li>-H 显示树状结构</li>\n<li>r 显示当前终端的进程</li>\n<li>T 显示当前终端的所有程序</li>\n<li>u 指定用户的所有进程</li>\n<li>-au 显示较详细的资讯</li>\n<li>-aux 显示所有包含其他使用者的行程</li>\n<li>-C&lt;命令&gt; 列出指定命令的状况</li>\n<li>–lines&lt;行数&gt; 每页显示的行数</li>\n<li>–width&lt;字符数&gt; 每页显示的字符数</li>\n<li>–help 显示帮助信息</li>\n<li>–version 显示版本显示</li>\n</ul>\n<h4 id="-">查看所有进程信息</h4>\n<pre><code class="lang-shell">ps -<span class="hljs-keyword">A</span>\n</code></pre>\n<h4 id="-grep-">与 grep 命令配合查看特定进程</h4>\n<p>grep (Global Regular Expression Print)命令是查找，是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。</p>\n<pre><code class="lang-shell"><span class="hljs-keyword">ps</span> -ef |<span class="hljs-keyword">grep</span> nginx\n</code></pre>\n<p>中间的|是管道命令 是指 ps 命令与 grep 同时执行</p>\n<h3 id="-">杀死进程</h3>\n<pre><code><span class="hljs-built_in">kill</span> pid\n</code></pre><h4 id="-">查看网络状态</h4>\n<pre><code class="lang-shell"><span class="hljs-attribute">sudo netstat -ntlup</span>\n</code></pre>\n'}}},{key:"render",value:function(){return d.a.createElement("div",{dangerouslySetInnerHTML:this.rawMarkup()})}}]),s}(h.Component);s.default=f}});