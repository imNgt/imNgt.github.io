webpackJsonp([5],{366:function(t,e,n){"use strict";function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function u(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function i(t,e,n){return e&&u(t.prototype,e),n&&u(t,n),t}function c(t,e){return!e||"object"!==o(e)&&"function"!=typeof e?f(t):e}function f(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function p(t){return(p=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function a(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&l(t,e)}function l(t,e){return(l=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}Object.defineProperty(e,"__esModule",{value:!0});var y=n(6),h=n.n(y),s=function(t){function e(t){return r(this,e),c(this,p(e).call(this,t))}return a(e,t),i(e,[{key:"rawMarkup",value:function(){return{__html:'<h1 id="http-">http 代理原理</h1>\n<h3 id="-http-">什么是 http 代理？</h3>\n<p>http 代理工作于服务器端和客户端之间，可以在 http 请求发送至服务器前对 http 协议进行逐行处理，再转发到后台服务器，反之亦可。</p>\n<div align="center"><img width="100%" height="auto" src="http://p42jcfxfo.bkt.clouddn.com/images/thinkin/web_proxy.png"/></div>\n'}}},{key:"render",value:function(){return h.a.createElement("div",{dangerouslySetInnerHTML:this.rawMarkup()})}}]),e}(y.Component);e.default=s}});